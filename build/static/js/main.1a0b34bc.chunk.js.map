{"version":3,"sources":["stores/ducks/table-list.type.ts","stores/ducks/table-list.ts","services/table/list.ts","utils/history.ts","stores/create.ts","App.tsx","index.tsx","utils/axios.ts","stores/ducks/loading.ts","stores/ducks/pagination.ts","components/Dynamic/index.tsx","config/prefix.ts","stores/ducks/global.type.ts","services/global.ts","stores/ducks/global.ts","utils/index.ts"],"names":["actionTypes","fetchTableListFailAction","payload","type","FETCH_TABLE_LIST_FAIL","fetchTableList","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","_ref2","_ref2$data","list","pagination","wrap","_context","prev","next","setLoadingAction","scope","Prefix","tableList","loading","axios","request","url","sent","data","FETCH_TABLE_LIST_SUC","setPaginationAction","t0","notification_default","error","message","description","stop","_x","apply","this","arguments","initialState","__webpack_exports__","state","length","undefined","action","objectSpread","history","createBrowserHistory","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","router","connectRouter","global","globalReducer","tableListReducer","paginationReducer","loadingReducer","middlewares","routerMiddleware","thunkMiddleware","store","createStore","applyMiddleware","Login","Dynamic","Promise","all","__webpack_require__","e","then","bind","Basic","hot","react_default","createElement","es","locale_provider_default","locale","zhCN","esm","react_router","component","path","exact","ReactDOM","render","src_App","document","getElementById","axios__WEBPACK_IMPORTED_MODULE_0__","n","Axios","create","baseURL","process","timeout","withCredentials","interceptors","response","use","res","reject","login","auth","_Users_yuzhe_FE_react_backend_boilerplate_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","_Users_yuzhe_FE_react_backend_boilerplate_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","pageSize","current","total","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","nprogress__WEBPACK_IMPORTED_MODULE_1__","nprogress__WEBPACK_IMPORTED_MODULE_1___default","react_loadable__WEBPACK_IMPORTED_MODULE_2__","react_loadable__WEBPACK_IMPORTED_MODULE_2___default","Loading","useEffect","nprogress","start","done","Fragment","loader","Loadable","d","method","loginSucAction","LOGIN_SUC","loginFailAction","LOGIN_FAIL","authFailAction","AUTH_FAIL","loginAction","token","localStorage","setItem","replace","authAction","_ref3","_callee2","_ref4","_ref4$data","username","routes","_context2","isLogined","location","href","indexOf","AUTH_SUC","_x2","logoutAction","LOGOUT","getItem"],"mappings":"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","file":"static/js/main.1a0b34bc.chunk.js","sourcesContent":["export interface ITableListState {\n    list: ITableListItem[]\n}\n\nexport interface IFetchTableListSucPayload {\n    list: ITableListItem[]\n    pagination: IPagination\n}\n\nexport enum actionTypes {\n    FETCH_TABLE_LIST_SUC = 'table-list/fetch-suc',\n    FETCH_TABLE_LIST_FAIL = 'table-list/fetch-fail'\n}\n\nexport interface IFetchTableListSuc {\n    type: actionTypes.FETCH_TABLE_LIST_SUC\n    payload: IFetchTableListSucPayload\n}\n\nexport interface IFetchTalbeListFail {\n    type: actionTypes.FETCH_TABLE_LIST_FAIL\n    payload: IErrorPaylod\n}\n\nexport type AllActions = IFetchTableListSuc | IFetchTalbeListFail\n","import {\n    actionTypes,\n    AllActions,\n    IFetchTableListSuc,\n    IFetchTableListSucPayload,\n    IFetchTalbeListFail,\n    ITableListState\n} from '@/stores/ducks/table-list.type'\nimport { ThunkAction } from 'redux-thunk'\nimport { AppState } from '@/stores/create'\nimport { Action } from 'redux'\nimport { setLoadingAction } from '@/stores/ducks/loading'\nimport { Prefix } from '@/config/prefix'\nimport { notification } from 'antd'\nimport { axiosTableList } from '@/services/table/list'\nimport { setPaginationAction } from '@/stores/ducks/pagination'\n\n// Action creators\nconst fetchTableListSucAction = (\n    payload: IFetchTableListSucPayload\n): IFetchTableListSuc => ({\n    type: actionTypes.FETCH_TABLE_LIST_SUC,\n    payload\n})\n\nconst fetchTableListFailAction = (\n    payload: IErrorPaylod\n): IFetchTalbeListFail => ({\n    type: actionTypes.FETCH_TABLE_LIST_FAIL,\n    payload\n})\n\n// Side effects\n\nexport const fetchTableList = (): ThunkAction<\n    void,\n    AppState,\n    null,\n    Action<string>\n> => async dispatch => {\n    dispatch(\n        setLoadingAction({\n            scope: Prefix.tableList,\n            loading: true\n        })\n    )\n    try {\n        const {\n            data: { list, pagination }\n        } = await axiosTableList()\n        dispatch(fetchTableListSucAction({ list, pagination }))\n        dispatch(\n            setPaginationAction({\n                scope: Prefix.tableList,\n                pagination\n            })\n        )\n        dispatch(\n            setLoadingAction({\n                scope: Prefix.tableList,\n                loading: false\n            })\n        )\n    } catch (e) {\n        dispatch(fetchTableListFailAction(e))\n        dispatch(\n            setLoadingAction({\n                scope: Prefix.tableList,\n                loading: false\n            })\n        )\n        notification.error({\n            message: '获取数据失败',\n            description: e.message\n        })\n    }\n}\n\n// reducers\nconst initialState: ITableListState = {\n    list: []\n}\n\nexport default (state = initialState, action: AllActions) => {\n    switch (action.type) {\n        case actionTypes.FETCH_TABLE_LIST_SUC:\n            return { ...state, list: action.payload.list }\n        case actionTypes.FETCH_TABLE_LIST_FAIL:\n            return { ...state, list: [] }\n        default:\n            return state\n    }\n}\n","import axios from '@/utils/axios'\nimport { IFetchTableListSucPayload } from '@/stores/ducks/table-list.type'\n\nexport const axiosTableList = () =>\n    axios.request<IFetchTableListSucPayload>({\n        url: '/list'\n    })\n","import { createBrowserHistory } from 'history'\n\nconst history = createBrowserHistory()\nexport default history\n","import { createStore, applyMiddleware, compose, combineReducers } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport logMiddleware from 'redux-logger'\nimport globalReducer from './ducks/global'\nimport loadingReducer from './ducks/loading'\nimport paginationReducer from './ducks/pagination'\nimport tableListReducer from './ducks/table-list'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport history from '@/utils/history'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst rootReducer = combineReducers({\n    router: connectRouter(history),\n    global: globalReducer,\n    tableList: tableListReducer,\n    pagination: paginationReducer,\n    loading: loadingReducer\n})\n\nexport type AppState = ReturnType<typeof rootReducer>\nconst middlewares = [routerMiddleware(history), thunkMiddleware]\nif (process.env.NODE_ENV === 'development') {\n    middlewares.push(logMiddleware)\n}\nconst store = createStore(\n    rootReducer,\n    {},\n    composeEnhancers(applyMiddleware(...middlewares))\n)\n\nexport default store\n","import React from 'react'\nimport { hot } from 'react-hot-loader/root'\nimport Dynamic from '@/components/Dynamic'\nimport { Route, Switch } from 'react-router-dom'\nimport { ConnectedRouter } from 'connected-react-router'\nimport zhCN from 'antd/lib/locale-provider/zh_CN'\nimport { LocaleProvider } from 'antd'\nimport { Provider } from 'react-redux'\nimport store from '@/stores/create'\nimport history from '@/utils/history'\n\nconst Login = Dynamic(() =>\n    import(/* webpackChunkName:\"login\" */ '@/pages/login')\n)\n\nconst Basic = Dynamic(() =>\n    import(/*webpackChunkName:\"basic\"*/ '@/layouts/baisc')\n)\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <LocaleProvider locale={zhCN}>\n                <ConnectedRouter history={history}>\n                    <Switch>\n                        <Route component={Login} path=\"/login\" exact />\n                        <Route component={Basic} path=\"/\" />\n                    </Switch>\n                </ConnectedRouter>\n            </LocaleProvider>\n        </Provider>\n    )\n}\n\nexport default hot(App)\n","import 'react-hot-loader'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport '@/assets/styles/_reset.scss'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","import Axios from 'axios'\n\nconst axios = Axios.create({\n    baseURL: process.env.REACT_APP_FETCH_URL,\n    timeout: 10000,\n    withCredentials: true\n})\naxios.interceptors.response.use(\n    res => res,\n    error => {\n        const { response } = error\n        if (!response || !response.data || !response.data.message) {\n            return Promise.reject({ message: '未知错误' })\n        }\n        return Promise.reject({ message: response.data.message })\n    }\n)\nexport default axios\n","import { Prefix } from '@/config/prefix'\n\nexport interface ISetLoadingPayload {\n    scope: Prefix\n    loading: boolean\n}\n\ntype TLoadingState = { [O in Prefix]?: boolean }\n\nconst initialState: TLoadingState = {\n    login: false,\n    auth: true,\n    tableList: true\n}\n\nexport const setLoadingAction = ({ scope, loading }: ISetLoadingPayload) => ({\n    type: 'SET_LOADING',\n    payload: { scope, loading }\n})\n\nexport default (\n    state = initialState,\n    action: ReturnType<typeof setLoadingAction>\n) => {\n    if (action.type === 'SET_LOADING') {\n        return {\n            ...state,\n            [action.payload.scope]: action.payload.loading\n        }\n    }\n    return state\n}\n","import { Prefix } from '@/config/prefix'\n\nexport interface ISetPaginationPayload {\n    scope: Prefix\n    pagination: IPagination\n}\n\ntype TPaginationState = { [O in Prefix]?: IPagination }\n\nconst initialState: TPaginationState = {\n    tableList: {\n        pageSize: 0,\n        current: 0,\n        total: 0\n    }\n}\n\nexport const setPaginationAction = ({\n    scope,\n    pagination\n}: ISetPaginationPayload) => ({\n    type: 'SET_PAGINATION',\n    payload: { scope, pagination }\n})\n\nexport default (\n    state = initialState,\n    action: ReturnType<typeof setPaginationAction>\n) => {\n    if (action.type === 'SET_PAGINATION') {\n        return {\n            ...state,\n            [action.payload.scope]: {\n                ...state[action.payload.scope],\n                ...action.payload.pagination\n            }\n        }\n    }\n    return state\n}\n","import React, { useEffect, FunctionComponent } from 'react'\nimport nprogress from 'nprogress'\nimport Loadable, { LoadingComponentProps } from 'react-loadable'\n\nconst Loading: FunctionComponent<LoadingComponentProps> = () => {\n    useEffect((): any => {\n        nprogress.start()\n        return nprogress.done\n    }, [])\n    return <></>\n}\n\nexport default (loader: any) =>\n    Loadable({\n        loader,\n        loading: Loading\n    })\n","export enum Prefix {\n    login = 'login',\n    auth = 'auth',\n    tableList = 'tableList'\n}\n","export interface IGlobalState {\n    token: string\n    username: string\n    routes: string[]\n}\n\nexport interface ILoginPayload {\n    username: string\n    password: string\n}\n\nexport interface ILoginSucPayload {\n    token: string\n}\n\nexport interface IErrorPayload {\n    error: string\n}\n\nexport interface IAuthSucPayload {\n    username: string\n    routes: string[]\n}\n\nexport enum actionTypes {\n    LOGIN_SUC = 'global/login-suc',\n    LOGIN_FAIL = 'global/login-fail',\n    AUTH_SUC = 'global/auth-suc',\n    AUTH_FAIL = 'global/auth-fail',\n    LOGOUT = 'globa/logout'\n}\n\nexport interface ILoginSucAction {\n    type: actionTypes.LOGIN_SUC\n    payload: ILoginSucPayload\n}\n\nexport interface ILoginFailAction {\n    type: actionTypes.LOGIN_FAIL\n    payload: IErrorPayload\n}\n\nexport interface IAuthSucAction {\n    type: actionTypes.AUTH_SUC\n    payload: IAuthSucPayload\n}\n\nexport interface IAuthFailAction {\n    type: actionTypes.AUTH_FAIL\n    payload: IErrorPayload\n}\n\nexport interface ILogoutSucAction {\n    type: actionTypes.LOGOUT\n}\n\nexport type AllActions =\n    | ILoginSucAction\n    | ILoginFailAction\n    | IAuthSucAction\n    | IAuthFailAction\n    | ILogoutSucAction\n","import axios from '@/utils/axios'\nimport {\n    IAuthSucPayload,\n    ILoginPayload,\n    ILoginSucPayload\n} from '@/stores/ducks/global.type'\n\nexport const login = (payload: ILoginPayload) =>\n    axios.request<ILoginSucPayload>({\n        url: '/login',\n        method: 'post',\n        data: payload\n    })\n\nexport const auth = () =>\n    axios.request<IAuthSucPayload>({\n        url: '/auth'\n    })\n","import {\n    actionTypes,\n    AllActions,\n    IAuthFailAction,\n    IAuthSucAction,\n    IAuthSucPayload,\n    IErrorPayload,\n    IGlobalState,\n    ILoginPayload,\n    ILoginSucAction,\n    ILoginSucPayload,\n    ILogoutSucAction\n} from '@/stores/ducks/global.type'\nimport { ThunkAction } from 'redux-thunk'\nimport { Action } from 'redux'\nimport { setLoadingAction } from '@/stores/ducks/loading'\nimport { auth, login } from '@/services/global'\nimport { notification } from 'antd'\nimport { AppState } from '@/stores/create'\nimport { Prefix } from '@/config/prefix'\nimport { replace } from 'connected-react-router'\nimport { isLogined } from '@/utils'\n\n// Action Creators\nconst loginSucAction = (payload: ILoginSucPayload): ILoginSucAction => ({\n    type: actionTypes.LOGIN_SUC,\n    payload\n})\n\nconst logoutSucAction = (): ILogoutSucAction => ({\n    type: actionTypes.LOGOUT\n})\n\nconst loginFailAction = (payload: IErrorPayload) => ({\n    type: actionTypes.LOGIN_FAIL,\n    payload\n})\n\nconst authSucAction = (payload: IAuthSucPayload): IAuthSucAction => ({\n    type: actionTypes.AUTH_SUC,\n    payload\n})\n\nconst authFailAction = (payload: IErrorPayload): IAuthFailAction => ({\n    type: actionTypes.AUTH_FAIL,\n    payload\n})\n\n// Side effects\nexport const loginAction = (\n    payload: ILoginPayload\n): ThunkAction<void, AppState, null, Action<string>> => async dispatch => {\n    dispatch(\n        setLoadingAction({\n            scope: Prefix.login,\n            loading: true\n        })\n    )\n    try {\n        const {\n            data: { token }\n        } = await login(payload)\n        localStorage.setItem('token', token)\n        dispatch(loginSucAction({ token }))\n        dispatch(\n            setLoadingAction({\n                scope: Prefix.login,\n                loading: false\n            })\n        )\n        dispatch(replace('/'))\n        // window.location.replace('/')\n    } catch (e) {\n        dispatch(\n            setLoadingAction({\n                scope: Prefix.login,\n                loading: false\n            })\n        )\n        dispatch(loginFailAction(e))\n        notification.error({\n            message: '登录失败',\n            description: e.message\n        })\n    }\n}\n\nexport const authAction = (): ThunkAction<\n    void,\n    AppState,\n    null,\n    Action<string>\n> => async dispatch => {\n    if (!isLogined()) {\n        if (window.location.href.indexOf('login') === -1) {\n            dispatch(replace('/login'))\n        } else {\n            dispatch(\n                setLoadingAction({\n                    scope: Prefix.auth,\n                    loading: false\n                })\n            )\n        }\n    } else {\n        dispatch(\n            setLoadingAction({\n                scope: Prefix.auth,\n                loading: true\n            })\n        )\n        try {\n            const {\n                data: { username, routes }\n            } = await auth()\n            dispatch(\n                authSucAction({\n                    username,\n                    routes\n                })\n            )\n            dispatch(\n                setLoadingAction({\n                    scope: Prefix.auth,\n                    loading: false\n                })\n            )\n            if (window.location.href.indexOf('login') > -1) {\n                dispatch(replace('/'))\n            }\n        } catch (e) {\n            dispatch(\n                setLoadingAction({\n                    scope: Prefix.auth,\n                    loading: false\n                })\n            )\n            localStorage.setItem('token', '')\n            if (window.location.href.indexOf('login') === -1) {\n                dispatch(replace('/login'))\n            }\n            dispatch(authFailAction(e))\n            notification.error({\n                message: '获取基本信息',\n                description: e.message\n            })\n        }\n    }\n}\n\nexport const logoutAction = (): ThunkAction<\n    void,\n    AppState,\n    null,\n    Action<string>\n> => dispatch => {\n    dispatch(logoutSucAction())\n    localStorage.setItem('token', '')\n    dispatch(replace('/login'))\n}\n// reducers\nconst initialState: IGlobalState = {\n    token: localStorage.getItem('token') || '',\n    username: '',\n    routes: []\n}\n\nexport default (state = initialState, action: AllActions) => {\n    switch (action.type) {\n        case actionTypes.LOGIN_SUC:\n            return { ...state, token: action.payload.token }\n        case actionTypes.LOGIN_FAIL:\n        case actionTypes.LOGOUT:\n        case actionTypes.AUTH_FAIL:\n            return { ...state, token: '', username: '', routes: [] }\n        case actionTypes.AUTH_SUC:\n            return { ...state, ...action.payload }\n        default:\n            return state\n    }\n}\n","export const isLogined = (): boolean => !!localStorage.getItem('token')\n"],"sourceRoot":""}