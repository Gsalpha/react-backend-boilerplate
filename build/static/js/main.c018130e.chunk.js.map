{"version":3,"sources":["stores/ducks/loading.ts","utils/history.ts","stores/create.ts","App.tsx","index.tsx","components/Dynamic/index.tsx","stores/ducks/global.type.ts","utils/axios.ts","config/prefix.ts","services/global.ts","stores/ducks/global.ts","utils/index.ts"],"names":["initialState","login","auth","setLoadingAction","_ref","type","payload","scope","loading","__webpack_exports__","state","arguments","length","undefined","action","Object","_Users_yuzhe_FE_react_backend_boilerplate_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","_Users_yuzhe_FE_react_backend_boilerplate_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","history","createBrowserHistory","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","router","connectRouter","global","globalReducer","loadingReducer","store","createStore","applyMiddleware","routerMiddleware","thunkMiddleware","logMiddleware","Login","Dynamic","Promise","all","__webpack_require__","e","then","bind","Basic","hot","react_default","a","createElement","es","esm","react_router","component","path","exact","ReactDOM","render","src_App","document","getElementById","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","nprogress__WEBPACK_IMPORTED_MODULE_1__","nprogress__WEBPACK_IMPORTED_MODULE_1___default","react_loadable__WEBPACK_IMPORTED_MODULE_2__","react_loadable__WEBPACK_IMPORTED_MODULE_2___default","Loading","useEffect","nprogress","start","done","Fragment","loader","Loadable","actionTypes","axios","Axios","create","baseURL","process","timeout","withCredentials","interceptors","response","use","res","error","data","message","reject","Prefix","request","url","method","loginSucAction","LOGIN_SUC","loginFailAction","LOGIN_FAIL","authFailAction","AUTH_FAIL","loginAction","asyncToGenerator","regenerator_default","mark","_callee","dispatch","_ref2","token","wrap","_context","prev","next","sent","localStorage","setItem","replace","t0","notification_default","description","stop","_x","apply","this","authAction","_ref3","_callee2","_ref4","_ref4$data","username","routes","_context2","isLogined","location","href","indexOf","AUTH_SUC","_x2","logoutAction","LOGOUT","getItem","objectSpread","d"],"mappings":"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","file":"static/js/main.c018130e.chunk.js","sourcesContent":["import { Prefix } from '@/config/prefix'\n\nexport interface ISetLoadingPayload {\n    scope: Prefix\n    loading: boolean\n}\n\ntype TLoadingState = { [O in Prefix]: boolean }\n\nconst initialState: TLoadingState = {\n    login: false,\n    auth: true\n}\n\nexport const setLoadingAction = ({ scope, loading }: ISetLoadingPayload) => ({\n    type: 'SET_LOADING',\n    payload: { scope, loading }\n})\n\nexport default (\n    state = initialState,\n    action: ReturnType<typeof setLoadingAction>\n) => {\n    if (action.type === 'SET_LOADING') {\n        return {\n            ...state,\n            [action.payload.scope]: action.payload.loading\n        }\n    }\n    return state\n}\n","import { createBrowserHistory } from 'history'\n\nconst history = createBrowserHistory()\nexport default history\n","import { createStore, applyMiddleware, compose, combineReducers } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport logMiddleware from 'redux-logger'\nimport globalReducer from './ducks/global'\nimport loadingReducer from './ducks/loading'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport history from '@/utils/history'\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst rootReducer = combineReducers({\n    router: connectRouter(history),\n    global: globalReducer,\n    loading: loadingReducer\n})\n\nexport type AppState = ReturnType<typeof rootReducer>\n\nconst store = createStore(\n    rootReducer,\n    {},\n    composeEnhancers(\n        applyMiddleware(\n            routerMiddleware(history),\n            thunkMiddleware,\n            logMiddleware\n        )\n    )\n)\n\nexport default store\n","import React from 'react'\nimport { hot } from 'react-hot-loader/root'\nimport Dynamic from '@/components/Dynamic'\nimport { Route, Switch } from 'react-router-dom'\nimport { ConnectedRouter } from 'connected-react-router'\n\nimport { Provider } from 'react-redux'\nimport store from '@/stores/create'\nimport history from '@/utils/history'\n\nconst Login = Dynamic(() =>\n    import(/* webpackChunkName:\"login\" */ '@/pages/login')\n)\n\nconst Basic = Dynamic(() =>\n    import(/*webpackChunkName:\"basic\"*/ '@/layouts/baisc')\n)\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <ConnectedRouter history={history}>\n                <Switch>\n                    <Route component={Login} path=\"/login\" exact />\n                    <Route component={Basic} path=\"/\" />\n                </Switch>\n            </ConnectedRouter>\n        </Provider>\n    )\n}\n\nexport default hot(App)\n","import 'react-hot-loader'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport '@/assets/styles/_reset.scss'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","import React, { useEffect, FunctionComponent } from 'react'\nimport nprogress from 'nprogress'\nimport Loadable, { LoadingComponentProps } from 'react-loadable'\n\nconst Loading: FunctionComponent<LoadingComponentProps> = () => {\n    useEffect((): any => {\n        nprogress.start()\n        return nprogress.done\n    }, [])\n    return <></>\n}\n\nexport default (loader: any) =>\n    Loadable({\n        loader,\n        loading: Loading\n    })\n","export interface IGlobalState {\n    token: string\n    username: string\n    routes: string[]\n}\n\nexport interface ILoginPayload {\n    username: string\n    password: string\n}\n\nexport interface ILoginSucPayload {\n    token: string\n}\n\nexport interface IErrorPayload {\n    error: string\n}\n\nexport interface IAuthSucPayload {\n    username: string\n    routes: string[]\n}\n\nexport enum actionTypes {\n    LOGIN_SUC = 'global/login-suc',\n    LOGIN_FAIL = 'global/login-fail',\n    AUTH_SUC = 'global/auth-suc',\n    AUTH_FAIL = 'global/auth-fail',\n    LOGOUT = 'globa/logout'\n}\n\nexport interface ILoginSucAction {\n    type: actionTypes.LOGIN_SUC\n    payload: ILoginSucPayload\n}\n\nexport interface ILoginFailAction {\n    type: actionTypes.LOGIN_FAIL\n    payload: IErrorPayload\n}\n\nexport interface IAuthSucAction {\n    type: actionTypes.AUTH_SUC\n    payload: IAuthSucPayload\n}\n\nexport interface IAuthFailAction {\n    type: actionTypes.AUTH_FAIL\n    payload: IErrorPayload\n}\n\nexport interface ILogoutSucAction {\n    type: actionTypes.LOGOUT\n}\n\nexport type AllActions =\n    | ILoginSucAction\n    | ILoginFailAction\n    | IAuthSucAction\n    | IAuthFailAction\n    | ILogoutSucAction\n","import Axios from 'axios'\n\nconst axios = Axios.create({\n    baseURL: process.env.REACT_APP_FETCH_URL,\n    timeout: 10000,\n    withCredentials: true\n})\naxios.interceptors.response.use(\n    res => res,\n    error => {\n        const { response } = error\n        if (!response || !response.data || !response.data.message) {\n            return Promise.reject({ message: '未知错误' })\n        }\n        return Promise.reject({ message: response.data.message })\n    }\n)\nexport default axios\n","export enum Prefix {\n    login = 'login',\n    auth = 'auth'\n}\n","import axios from '@/utils/axios'\nimport {\n    IAuthSucPayload,\n    ILoginPayload,\n    ILoginSucPayload\n} from '@/stores/ducks/global.type'\n\nexport const login = (payload: ILoginPayload) =>\n    axios.request<ILoginSucPayload>({\n        url: '/login',\n        method: 'post',\n        data: payload\n    })\n\nexport const auth = () =>\n    axios.request<IAuthSucPayload>({\n        url: '/auth'\n    })\n","import {\n    actionTypes,\n    AllActions,\n    IAuthFailAction,\n    IAuthSucAction,\n    IAuthSucPayload,\n    IErrorPayload,\n    IGlobalState,\n    ILoginPayload,\n    ILoginSucAction,\n    ILoginSucPayload,\n    ILogoutSucAction\n} from '@/stores/ducks/global.type'\nimport { ThunkAction } from 'redux-thunk'\nimport { Action } from 'redux'\nimport { setLoadingAction } from '@/stores/ducks/loading'\nimport { auth, login } from '@/services/global'\nimport { notification } from 'antd'\nimport { AppState } from '@/stores/create'\nimport { Prefix } from '@/config/prefix'\nimport { replace } from 'connected-react-router'\nimport { isLogined } from '@/utils'\n\n// Action Creators\nconst loginSucAction = (payload: ILoginSucPayload): ILoginSucAction => ({\n    type: actionTypes.LOGIN_SUC,\n    payload\n})\n\nconst logoutSucAction = (): ILogoutSucAction => ({\n    type: actionTypes.LOGOUT\n})\n\nconst loginFailAction = (payload: IErrorPayload) => ({\n    type: actionTypes.LOGIN_FAIL,\n    payload\n})\n\nconst authSucAction = (payload: IAuthSucPayload): IAuthSucAction => ({\n    type: actionTypes.AUTH_SUC,\n    payload\n})\n\nconst authFailAction = (payload: IErrorPayload): IAuthFailAction => ({\n    type: actionTypes.AUTH_FAIL,\n    payload\n})\n\n// Side effects\nexport const loginAction = (\n    payload: ILoginPayload\n): ThunkAction<void, AppState, null, Action<string>> => async dispatch => {\n    dispatch(\n        setLoadingAction({\n            scope: Prefix.login,\n            loading: true\n        })\n    )\n    try {\n        const {\n            data: { token }\n        } = await login(payload)\n        localStorage.setItem('token', token)\n        dispatch(loginSucAction({ token }))\n        dispatch(\n            setLoadingAction({\n                scope: Prefix.login,\n                loading: false\n            })\n        )\n        dispatch(replace('/'))\n        // window.location.replace('/')\n    } catch (e) {\n        dispatch(\n            setLoadingAction({\n                scope: Prefix.login,\n                loading: false\n            })\n        )\n        dispatch(loginFailAction(e))\n        notification.error({\n            message: '登录失败',\n            description: e.message\n        })\n    }\n}\n\nexport const authAction = (): ThunkAction<\n    void,\n    AppState,\n    null,\n    Action<string>\n> => async dispatch => {\n    if (!isLogined()) {\n        if (window.location.href.indexOf('login') === -1) {\n            dispatch(replace('/login'))\n        } else {\n            dispatch(\n                setLoadingAction({\n                    scope: Prefix.auth,\n                    loading: false\n                })\n            )\n        }\n    } else {\n        dispatch(\n            setLoadingAction({\n                scope: Prefix.auth,\n                loading: true\n            })\n        )\n        try {\n            const {\n                data: { username, routes }\n            } = await auth()\n            dispatch(\n                authSucAction({\n                    username,\n                    routes\n                })\n            )\n            dispatch(\n                setLoadingAction({\n                    scope: Prefix.auth,\n                    loading: false\n                })\n            )\n            if (window.location.href.indexOf('login') > -1) {\n                dispatch(replace('/'))\n            }\n        } catch (e) {\n            dispatch(\n                setLoadingAction({\n                    scope: Prefix.auth,\n                    loading: false\n                })\n            )\n            localStorage.setItem('token', '')\n            if (window.location.href.indexOf('login') === -1) {\n                dispatch(replace('/login'))\n            }\n            dispatch(authFailAction(e))\n            notification.error({\n                message: '获取基本信息',\n                description: e.message\n            })\n        }\n    }\n}\n\nexport const logoutAction = (): ThunkAction<\n    void,\n    AppState,\n    null,\n    Action<string>\n> => dispatch => {\n    dispatch(logoutSucAction())\n    localStorage.setItem('token', '')\n    dispatch(replace('/login'))\n}\n// reducers\nconst initialState: IGlobalState = {\n    token: localStorage.getItem('token') || '',\n    username: '',\n    routes: []\n}\n\nexport default (state = initialState, action: AllActions) => {\n    switch (action.type) {\n        case actionTypes.LOGIN_SUC:\n            return { ...state, token: action.payload.token }\n        case actionTypes.LOGIN_FAIL:\n        case actionTypes.LOGOUT:\n        case actionTypes.AUTH_FAIL:\n            return { ...state, token: '', username: '', routes: [] }\n        case actionTypes.AUTH_SUC:\n            return { ...state, ...action.payload }\n        default:\n            return state\n    }\n}\n","export const isLogined = (): boolean => !!localStorage.getItem('token')\n"],"sourceRoot":""}