{"version":3,"sources":["layouts/baisc/components/index.module.scss","layouts/baisc/components/Header/index.module.scss","layouts/baisc/components/Slide/index.module.scss","layouts/baisc/components/Slide/logo.svg","config/routes.ts","utils/route.ts","components/PrivateRoute/index.tsx","layouts/baisc/components/Header/index.tsx","config/responsive.ts","layouts/baisc/components/Slide/index.tsx","layouts/baisc/components/index.tsx","layouts/baisc/index.tsx"],"names":["module","exports","layout","spin","container","content","header","icon","user","username","menu","ctx","wrapper-drawer","span","__webpack_require__","p","Routes","path","redirect","hide","name","routes","component","Dynamic","e","then","bind","formateMenu","filter","route","map","formateSubMenu","length","Object","objectSpread","getFilteredMenusFromPermissionRoute","mapping","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","err","return","filterMatchRouters","matches","toConsumableArray","forEach","index","currentRoute","concat","splice","memo","_ref","isAuthorized","loading","rest","objectWithoutProperties","Component","react_default","a","createElement","react_router","assign","render","props","isLogined","location","pathname","indexOf","to","Item","logout","menu_default","react_router_dom","onClick","onChange","className","style","react_responsive_default","maxWidth","icon_default","type","dropdown_default","overlay","avatar_default","SubMenu","Menu","menus","getSingleOpenKey","useCallback","lastIndexOf","slice","getSingleSelectedKeys","short","_useState","useState","_useState2","slicedToArray","openKeys","setOpenKeys","_useState3","_useState4","selectedKeys","setSelectKeys","useEffect","mode","onOpenChange","renderMenu","item","key","title","Slide_Item","ico","withRouter","_ref2","visibie","Fragment","minWidth","src","logo","alt","Slide_Menu","drawer_default","placement","visible","onClose","antIcon","fontSize","result","flat","child","push","flatRoutes","breadcrumb","routers","flattenMenuData","data","menuItem","formateBreadcrumb","authRoutes","auth","menuDrawerVisible","setMenuDrawerVisible","pathSnippets","useMemo","split","i","extraBreadcrumbItems","breadcrumb_default","_","url","join","authMenus","renderRoutes","exact","from","components_PrivateRoute","includes","react_document_title_default","target","find","process","renderTitle","spin_default","indicator","spinning","wrapperClassName","components_Header","components_Slide","connect","state","global","dispatch","authAction","logoutAction","Basic"],"mappings":"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","file":"static/js/basic.35e5f108.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"components_layout__oARy4\",\"spin\":\"components_spin__3p-pu\",\"container\":\"components_container__A4b_P\",\"content\":\"components_content__1JpSy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2_ls9\",\"icon\":\"Header_icon__hXCN3\",\"user\":\"Header_user__1JQeI\",\"username\":\"Header_username__1oPmx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Slide_menu__35ue7\",\"ctx\":\"Slide_ctx__sD4ed\",\"wrapper-drawer\":\"Slide_wrapper-drawer__31mkL\",\"span\":\"Slide_span__3c-U0\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import Dynamic from '@/components/Dynamic'\n\nexport const Routes: IRoute[] = [\n    {\n        path: '/',\n        redirect: '/dashboard/analysis',\n        hide: true\n    },\n    {\n        path: '/dashboard',\n        name: '控制台',\n        icon: 'dashboard',\n        redirect: '/dashboard/analysis',\n        routes: [\n            {\n                path: '/dashboard/analysis',\n                name: '分析页',\n                component: Dynamic(() =>\n                    import(\n                        /*webpackChunkName:\"dashboard-analysis\"*/ '@/pages/dashboard/analysis'\n                    )\n                ),\n                routes: [\n                    {\n                        path: '/dashboard/analysis/x',\n                        name: '呵呵',\n                        component: Dynamic(() =>\n                            import(\n                                /*webpackChunkName:\"dashboard-analysis\"*/ '@/pages/dashboard/analysis'\n                            )\n                        )\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        path: '/exception/403',\n        name: '403',\n        hide: true,\n        component: Dynamic(() =>\n            import(/*webpackChunkName:\"403\"*/ '@/pages/exception/403')\n        )\n    },\n    {\n        path: '/exception/404',\n        name: '404',\n        hide: true,\n        component: Dynamic(() =>\n            import(/*webpackChunkName:\"403\"*/ '@/pages/exception/404')\n        )\n    },\n    {\n        path: '/exception/500',\n        name: '500',\n        hide: true,\n        component: Dynamic(() =>\n            import(/*webpackChunkName:\"403\"*/ '@/pages/exception/500')\n        )\n    }\n]\n","import { Routes } from '@/config/routes'\n\nconst formateMenu = (routes: IRoute[]) =>\n    routes\n        .filter(route => route.name && !route.hide)\n        .map(route => formateSubMenu(route))\n        .filter(route => route)\n\nconst formateSubMenu = (route: IRoute): IRoute => {\n    if (route.routes && route.routes.length && !route.hide) {\n        return {\n            ...route,\n            routes: formateMenu(route.routes)\n        }\n    }\n    return route\n}\n\nexport const flatRoutes = (routes: IRoute[]): IRoute[] => {\n    let result: IRoute[] = []\n    const flat = (child: IRoute) => {\n        result.push(child)\n        if (child.routes) {\n            child.routes.forEach(item => {\n                flat(item)\n            })\n        }\n    }\n    routes.forEach(item => {\n        if (item.routes && item.routes.length) {\n            flat(item)\n        } else {\n            result.push(item)\n        }\n    })\n    return result\n}\nconst filterMatchRouters = (\n    routes: IRoute[],\n    mapping: { [propName: string]: true }\n) => {\n    let matches: IRoute[] = [...routes]\n    matches.forEach((route, index) => {\n        const currentRoute = `${route.path}`\n        if (mapping[currentRoute] && route) {\n            if (route.routes && route.routes.length) {\n                route.routes = [...filterMatchRouters(route.routes, mapping)]\n            }\n        } else {\n            if (route.routes && route.routes.length) {\n                route.routes = [...filterMatchRouters(route.routes, mapping)]\n            } else {\n                matches.splice(index, 1)\n            }\n        }\n    })\n    return matches\n}\nexport const getFilteredMenusFromPermissionRoute = (\n    routes: string[]\n): IRoute[] => {\n    const mapping: { [propName: string]: true } = {}\n    for (let route of routes) {\n        mapping[route] = true\n    }\n    return filterMatchRouters(formateMenu(Routes), mapping)\n}\n\nexport const formateBreadcrumb = (routers: IRoute[]) => {\n    const map = {} as any\n    const flattenMenuData = (data: IRoute[]) => {\n        data.forEach(menuItem => {\n            if (menuItem.routes) {\n                flattenMenuData(menuItem.routes)\n            }\n            map[menuItem.path] = menuItem\n        })\n    }\n    flattenMenuData(routers)\n    return map\n}\n\nexport const urlToList = (url: string) => {\n    const urllist = url.split('/').filter(i => i)\n    return urllist.map(\n        (urlItem, index) => `/${urllist.slice(0, index + 1).join('/')}`\n    )\n}\n","import React, { FunctionComponent, memo } from 'react'\nimport {\n    Redirect,\n    Route,\n    RouteComponentProps,\n    RouteProps\n} from 'react-router-dom'\nimport { isLogined } from '@/utils'\n\nexport interface IPrivateRouteProps extends RouteProps {\n    isAuthorized: boolean\n    loading: boolean\n}\n\nconst PrivateRoute: FunctionComponent<IPrivateRouteProps> = ({\n    isAuthorized,\n    component,\n    loading,\n    ...rest\n}) => {\n    const Component = component as\n        | React.ComponentType<RouteComponentProps<any>>\n        | React.ComponentType<any>\n    return (\n        <Route\n            {...rest}\n            render={(props: RouteComponentProps) => {\n                if (loading) {\n                    return null\n                }\n                if (!isLogined()) {\n                    return <Redirect to=\"/login\" />\n                }\n                if (props.location.pathname.indexOf('exception') > -1) {\n                    return <Component {...props} />\n                }\n                return isAuthorized ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect to=\"/exception/403\" />\n                )\n            }}\n        />\n    )\n}\nexport default memo(PrivateRoute)\n","import React, { FunctionComponent, memo } from 'react'\nimport style from './index.module.scss'\nimport { Icon, Avatar, Dropdown, Menu } from 'antd'\nimport { Link } from 'react-router-dom'\nimport { xl } from '@/config/responsive'\nimport MediaQuery from 'react-responsive'\n\ninterface IProps {\n    username: string\n\n    logout(): void\n\n    onChange(): void\n}\n\nconst { Item } = Menu\nconst menu = (logout: () => void) => (\n    <Menu>\n        <Item>\n            <Link to=\"/\">首页</Link>\n        </Item>\n        <Item onClick={logout}>注销</Item>\n    </Menu>\n)\nconst Header: FunctionComponent<IProps> = ({ username, onChange, logout }) => (\n    <header className={style.header}>\n        <MediaQuery maxWidth={xl}>\n            <Icon className={style.icon} type=\"menu-fold\" onClick={onChange} />\n        </MediaQuery>\n        <Dropdown overlay={menu(logout)}>\n            <section className={style.user}>\n                <Avatar icon=\"user\" />\n                <span className={style.username}>{username}</span>\n            </section>\n        </Dropdown>\n    </header>\n)\n\nexport default memo(Header)\n","export const xxl = 1600\nexport const xl = 1200\nexport const lg = 992\nexport const md = 768\nexport const sm = 576\n","import React, {\n    FunctionComponent,\n    memo,\n    useCallback,\n    useEffect,\n    useState\n} from 'react'\nimport style from './index.module.scss'\nimport { Drawer, Icon, Menu as InternalMenu } from 'antd'\nimport { Link, RouteComponentProps, withRouter } from 'react-router-dom'\nimport logo from './logo.svg'\nimport MediaQuery from 'react-responsive'\nimport { xl } from '@/config/responsive'\n\nconst { SubMenu, Item } = InternalMenu\nconst renderMenu = (menus: IRoute[]) => {\n    return menus.map(item => {\n        if (item.routes && item.routes.length) {\n            return (\n                <SubMenu\n                    key={item.path}\n                    title={\n                        <span>\n                            <Icon type={item.icon} />\n                            <span>{item.name}</span>\n                        </span>\n                    }\n                >\n                    {renderMenu(item.routes)}\n                </SubMenu>\n            )\n        }\n        return (\n            <Item key={item.path} className={style.item}>\n                {item.icon && <Icon className={style.ico} type={item.icon} />}\n                <span className={style.span}>\n                    <Link to={item.path}>{item.name}</Link>\n                </span>\n            </Item>\n        )\n    })\n}\n\nconst Menu: FunctionComponent<{ pathname: string; menus: IRoute[] }> = ({\n    pathname,\n    menus\n}) => {\n    const getSingleOpenKey = useCallback(() => {\n        const index = pathname.lastIndexOf('/')\n        const openKey = pathname.slice(0, index)\n        return openKey || pathname\n    }, [pathname])\n    const getSingleSelectedKeys = useCallback(() => {\n        let short = ''\n        if (pathname.lastIndexOf('/') === pathname.length - 1) {\n            short = pathname.slice(0, pathname.length - 1)\n        }\n        return [pathname, short]\n    }, [pathname])\n    const [openKeys, setOpenKeys] = useState([getSingleOpenKey()])\n    const [selectedKeys, setSelectKeys] = useState(getSingleSelectedKeys())\n    useEffect(() => {\n        setOpenKeys([getSingleOpenKey()])\n        setSelectKeys(getSingleSelectedKeys())\n    }, [pathname, getSingleOpenKey, getSingleSelectedKeys])\n    const handleOpenChange = (openKeys: string[]) => {\n        setOpenKeys(openKeys)\n    }\n    return (\n        <InternalMenu\n            className={style.ctx}\n            mode=\"inline\"\n            selectedKeys={selectedKeys}\n            openKeys={openKeys}\n            onOpenChange={handleOpenChange}\n        >\n            {renderMenu(menus)}\n        </InternalMenu>\n    )\n}\n\nconst Slide: FunctionComponent<\n    {\n        visibie: boolean\n        onChange(): void\n        menus: IRoute[]\n    } & RouteComponentProps\n> = ({ visibie, onChange, location: { pathname }, menus }) => (\n    <>\n        <MediaQuery minWidth={xl}>\n            <section className={style.menu}>\n                <h1>\n                    <img src={logo} alt=\"react app\" />\n                    <span>REACT BOILERPLATE</span>\n                </h1>\n                <Menu pathname={pathname} menus={menus} />\n            </section>\n        </MediaQuery>\n        <MediaQuery maxWidth={xl}>\n            <Drawer\n                placement=\"left\"\n                visible={visibie}\n                onClose={onChange}\n                className={style['wrapper-drawer']}\n            >\n                <Menu pathname={pathname} menus={menus} />\n            </Drawer>\n        </MediaQuery>\n    </>\n)\nexport default memo(withRouter(Slide))\n","import React, {\n    FunctionComponent,\n    memo,\n    useEffect,\n    useMemo,\n    useState\n} from 'react'\nimport { Link, Redirect, Switch } from 'react-router-dom'\nimport {\n    flatRoutes,\n    formateBreadcrumb,\n    getFilteredMenusFromPermissionRoute\n} from '@/utils/route'\nimport { Routes } from '@/config/routes'\nimport PrivateRoute from '@/components/PrivateRoute'\nimport { Spin, Icon, Breadcrumb } from 'antd'\nimport style from './index.module.scss'\nimport { IProps } from '@/layouts/baisc'\nimport Header from './Header'\nimport Slide from './Slide'\nimport Document from 'react-document-title'\n\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 80 }} spin />\nconst routes = flatRoutes(Routes)\nconst breadcrumb = formateBreadcrumb(Routes)\n\nconst Basic: FunctionComponent<IProps> = ({\n    loading,\n    username,\n    location: { pathname },\n    routes: authRoutes,\n    auth,\n    logout\n}) => {\n    const [menuDrawerVisible, setMenuDrawerVisible] = useState(false)\n    const renderTitle = () => {\n        const target = routes.find(route => route.path === pathname)\n        return target && target.name\n            ? `${target.name} - ${process.env.REACT_APP_NAME}`\n            : (process.env.REACT_APP_NAME as string)\n    }\n    const onChange = () =>\n        setMenuDrawerVisible(menuDrawerVisible => !menuDrawerVisible)\n    const pathSnippets = useMemo(() => pathname.split('/').filter(i => i), [\n        pathname\n    ])\n    const extraBreadcrumbItems = useMemo(\n        () => [\n            <Breadcrumb.Item key=\"home\">\n                <Link to=\"/\">\n                    <Icon type=\"home\" />\n                </Link>\n            </Breadcrumb.Item>,\n            ...pathSnippets.map((_, index) => {\n                const url = `/${pathSnippets.slice(0, index + 1).join('/')}`\n                return (\n                    breadcrumb[url] && (\n                        <Breadcrumb.Item key={url}>\n                            <Link to={url}>{breadcrumb[url].name}</Link>\n                        </Breadcrumb.Item>\n                    )\n                )\n            })\n        ],\n        [pathSnippets]\n    )\n    useEffect(() => {\n        auth()\n    }, [auth])\n    const authMenus = useMemo(() => {\n        return getFilteredMenusFromPermissionRoute(authRoutes)\n    }, [authRoutes])\n    const renderRoutes = useMemo(\n        () =>\n            routes\n                .map(route => {\n                    if (route.redirect) {\n                        return (\n                            <Redirect\n                                exact={true}\n                                from={route.path}\n                                to={route.redirect}\n                                key={route.redirect}\n                            />\n                        )\n                    }\n                    if (route.component) {\n                        return (\n                            <PrivateRoute\n                                isAuthorized={authRoutes.includes(route.path)}\n                                component={route.component}\n                                path={route.path}\n                                key={route.path}\n                                loading={loading}\n                                exact\n                            />\n                        )\n                    }\n                    return null\n                })\n                .concat(<Redirect key=\"/exception/404\" to=\"/exception/404\" />),\n        [authRoutes, loading]\n    )\n    return (\n        <Document title={renderTitle()}>\n            <Spin\n                indicator={antIcon}\n                spinning={loading}\n                wrapperClassName={style.spin}\n            >\n                <section className={style.layout}>\n                    <Header\n                        username={username}\n                        onChange={onChange}\n                        logout={logout}\n                    />\n                    <Slide\n                        menus={authMenus}\n                        visibie={menuDrawerVisible}\n                        onChange={onChange}\n                    />\n                    <section className={style.container}>\n                        <Breadcrumb>{extraBreadcrumbItems}</Breadcrumb>\n                        <section className={style.content}>\n                            <Switch>{renderRoutes}</Switch>\n                        </section>\n                    </section>\n                </section>\n            </Spin>\n        </Document>\n    )\n}\n\nexport default memo(Basic)\n","import { memo } from 'react'\nimport { connect } from 'react-redux'\nimport { AppState } from '@/stores/create'\nimport { authAction, logoutAction } from '@/stores/ducks/global'\nimport Basic from './components'\nimport { RouteComponentProps } from 'react-router'\n\nconst mapStateToProps = (state: AppState) => ({\n    loading: state.loading.auth,\n    username: state.global.username,\n    routes: state.global.routes\n})\nconst mapDispatchToProps = (dispatch: any) => ({\n    auth: () => dispatch(authAction()),\n    logout: () => dispatch(logoutAction())\n})\n\nexport interface IProps\n    extends ReturnType<typeof mapStateToProps>,\n        ReturnType<typeof mapDispatchToProps>,\n        RouteComponentProps {}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(memo(Basic))\n"],"sourceRoot":""}